package application;

import java.io.InputStream;

import communication.Connection;
import javafx.application.Platform;
import javafx.scene.control.Label;
import userinterface.UI;

public class Multimeter implements Runnable {

	Label meter;
	Connection connection;
	public Multimeter (Label meter, Connection connection) {
		this.meter = meter;
		this.connection = connection;
	}
	@Override
	public void run() {
		connection.send((int) '9');
		InputStream input = connection.getInputStream();
		int len = -1;
		int result = 0;
		byte[] buffer = new byte[64];
		int[] intbuffer = new int[64];
		try {
			while(!Thread.interrupted()){
	            if ( ( len = input.read(buffer)) == -1 ){
	            	break;
	            } else {
	            	if(len> 0) {
	            		System.out.println(len);
	            		for(int i = 0; i<len; i++){
	            			intbuffer[i] = buffer[i] & 0xFF;
	            			System.out.println("buffer" + i + " : "+ buffer[i]);
	            			System.out.println("intbuffer" + i + " : "+ intbuffer[i]);
	            		}
	            		if(len>1) {
	            			result = (intbuffer[0] << 8) |  intbuffer[1];
	            			 Platform.runLater(new Runnable() {
			                    	@Override
			                    	public void run() {
			                    		try {
	//		                    			UI.updateMeter((5.11/65536)*result);
			                    			UI.addData((5.11/65536)*result);
			                    		}
			                    		catch (Exception e) {
			                    			e.printStackTrace();
			                    		}
			                    	}
			                    });
	            		}
	                    System.out.println("string" + new String(intbuffer,0,len));
	                    System.out.println("result" + result);
	                    System.out.println("volt" + (5.11/65536)*result);
	                   
	            	}
	            }
	    	}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void updateMeter(double d) {
		meter.setText(d +" volt");
	}
}
