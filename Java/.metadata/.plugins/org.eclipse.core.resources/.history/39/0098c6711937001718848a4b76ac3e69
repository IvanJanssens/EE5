package userinterface;

import java.util.logging.Formatter;
import java.util.logging.Handler;
import java.util.logging.LogRecord;
import java.util.Date;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

public class LoggerFormatter extends Formatter{
	
	private static final DateFormat df = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss.SSS");
	 
	@Override
	public synchronized  String format(LogRecord record) {
		StringBuilder builder = new StringBuilder(1000);
        builder.append("[").append(record.getLevel()).append("] - ");
        builder.append(df.format(new Date(record.getMillis()))).append(" - ");
        builder.append("[").append(record.getSourceClassName()).append(".");
        builder.append(record.getSourceMethodName()).append("] - ");
        builder.append(formatMessage(record));
        if(record.getThrown() != null) {
        	StringWriter sw = new StringWriter();
        	PrintWriter pw = new PrintWriter(sw);
        	pw.println();
        	record.getThrown().printStackTrace(pw);
        	pw.close();
        	builder.append(sw.toString());
        }
        builder.append(record.getParameters());
        builder.append(System.lineSeparator());
        return builder.toString();
	}
	
	public String getHead(Handler h) {
		return "Start of file [" + df.format(new Date())+"]" + System.lineSeparator()
				+ "***********" +System.lineSeparator();
	}
	
	public String getTail(Handler h) {
		return "End of log" +System.lineSeparator()+System.lineSeparator();
	}

}
