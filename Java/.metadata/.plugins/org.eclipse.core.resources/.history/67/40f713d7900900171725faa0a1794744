package application;

public class Fourrier {
	
	public static void transform(int sign, int n, double real[], double im[]) {
		
		double scale = (double)Math.sqrt(1.0f/n);
		
		int i,j;
        for (i=j=0; i<n; ++i) {
            if (j>=i) {
	            double tempr = real[j]*scale;
	            double tempi = real[j]*scale;
	            real[j] = real[i]*scale;
	            im[j] = im[i]*scale;
	            real[i] = tempr;
	            im[i] = tempi;
            }
            int m = n/2;
            while (m>=1 && j>=m) {
	            j -= m;
	            m /= 2;
            }
            j += m;
        }
    
        int mmax,istep;
        for (mmax=1,istep=2*mmax; mmax<n; mmax=istep,istep=2*mmax) {
            float delta = (float)sign*3.141592654f/(float)mmax;
            for (int m=0; m<mmax; ++m) {
            	double w = (double)m*delta;
            	double wr = (double)Math.cos(w);
            	double wi = (double)Math.sin(w);
	            for (i=m; i<n; i+=istep) {
	                j = i+mmax;
	                double tr = wr*real[j]-wi*im[j];
	                double ti = wr*im[j]+wi*real[j];
	                real[j] = real[i]-tr;
	                im[j] = im[i]-ti;
	                real[i] += tr;
	                im[i] += ti;
	            }
            }
            mmax = istep;
        }
	}
}
